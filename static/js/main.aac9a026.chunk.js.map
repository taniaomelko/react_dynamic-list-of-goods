{"version":3,"sources":["components/GoodList/GoodList.js","components/Button/Button.js","api/goods.js","App.js","index.js"],"names":["GoodList","goods","className","map","good","key","id","style","color","name","Button","text","callback","type","onClick","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","App","state","loadGoods","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAGaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,wBAAIC,UAAU,iBACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVC,MAAO,CAAEC,MAAOJ,EAAKI,QAEpBJ,EAAKK,WCPDC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACpB,4BACEC,KAAK,SACLX,UAAU,cACVY,QAASF,GAERD,I,MCNE,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBAAML,IAC5BE,MAAK,SAAAhB,GAAK,OAAIA,EACZoB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEb,KAAKe,cAAcD,EAAEd,SACtCgB,MAAM,EAAG,OAEDC,EAAc,kBAAMX,IAC9BE,MAAK,SAAAhB,GAAK,OAAIA,EAAM0B,QAAO,SAAAvB,GAAI,MAAmB,QAAfA,EAAKI,aCiC5BoB,E,4MAtCbC,MAAQ,CACN5B,MAAO,I,EAGT6B,U,uCAAY,WAAMlB,GAAN,SAAAU,EAAA,6EAEKV,IAFL,yBAERX,MAFQ,WACL8B,SADK,2D,6GAMF,IAAD,OACC9B,EAAU+B,KAAKH,MAAf5B,MAER,OACE,yBAAKC,UAAU,OACb,qDACA,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACES,KAAK,iBACLC,SAAU,kBAAM,EAAKkB,UAAUf,MAEjC,kBAAC,EAAD,CACEJ,KAAK,qBACLC,SAAU,kBAAM,EAAKkB,UAAUV,MAEjC,kBAAC,EAAD,CACET,KAAK,iBACLC,SAAU,kBAAM,EAAKkB,UAAUJ,OAGnC,kBAAC,EAAD,CACEzB,MAAOA,S,GAhCCgC,IAAMC,WCJxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.aac9a026.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodList = ({ goods }) => (\n  <ul className=\"app__goodList\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ text, callback }) => (\n  <button\n    type=\"button\"\n    className=\"app__button\"\n    onClick={callback}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => getAll()\n  .then(goods => goods\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5));\n\nexport const getRedGoods = () => getAll()\n  .then(goods => goods.filter(good => good.color === 'red'));\n","import React from 'react';\nimport { GoodList } from './components/GoodList/GoodList';\nimport { Button } from './components/Button/Button';\n\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  };\n\n  loadGoods = async(callback) => {\n    this.setState({\n      goods: await callback(),\n    });\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Dynamic list of Goods</h1>\n        <div className=\"app__buttons\">\n          <Button\n            text=\"Load all goods\"\n            callback={() => this.loadGoods(getAll)}\n          />\n          <Button\n            text=\"Load 5 first goods\"\n            callback={() => this.loadGoods(get5First)}\n          />\n          <Button\n            text=\"Load red goods\"\n            callback={() => this.loadGoods(getRedGoods)}\n          />\n        </div>\n        <GoodList\n          goods={goods}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}